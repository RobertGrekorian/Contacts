@{
    ViewData["Title"] = "Contact List";
}

<div class="container mt-5">
    <div class="card shadow p-4">
        <div class="row">
            <div class="col-6">
                <h2 class="mb-2">Contacts</h2>
            </div>
            <div class="col-6 mb-3 text-end">
                <a asp-action="Create" class="btn btn-success">
                    <i class="fas fa-plus m-2"></i> Create a new Contact
                </a>
            </div>
        </div>
        <div style="max-height: 400px; min-height: 400px; overflow-y: auto;">
            <table id="contactDataTable" class="table table-striped table-bordered table-sm" style="table-layout: fixed; width: 100%;">
                <thead class="thead-light">
                    <tr>
                        <th style="width: 50px;">ID</th>
                        <th style="width: 100px;">First Name</th>
                        <th style="width: 100px;">Last Name</th>
                        <th style="width: 120px;">Phone</th>
                        <th style="width: 200px;">Email</th>
                        <th style="width: 250px;">Address</th>
                        <th style="width: 120px;">Country</th>
                        <th style="width: 80px;"></th>
                    </tr>
                    <tr class="column-search">
                        <th><input type="text" placeholder="Search ID" class="form-control search-input" data-column="0" style="width:100%" /></th>
                        <th><input type="text" placeholder="Search First Name" class="form-control search-input" data-column="1" style="width:100%" /></th>
                        <th><input type="text" placeholder="Search Last Name" class="form-control search-input" data-column="2" style="width:100%" /></th>
                        <th><input type="text" placeholder="Search Phone" class="form-control search-input" data-column="3" style="width:100%" /></th>
                        <th><input type="text" placeholder="Search Email" class="form-control search-input" data-column="4" style="width:100%" /></th>
                        <th><input type="text" placeholder="Search Address" class="form-control search-input" data-column="5" style="width:100%" /></th>
                        <th>
                            <select id="countryFilter" class="form-control search-input" data-column="6" style="width:100%">
                                <option value="">---Select Country---</option>
                            </select>
                        </th>
                        <th></th> <!-- Empty for actions column -->
                    </tr>
                </thead>
                <tbody>
                    
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css">
}

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#contactDataTable").DataTable({
                ajax: {
                    url: '/DapperContact/GetContacts',
                    dataSrc: 'data'
                },
                columns: [
                    { data: 'id' },
                    { data: 'firstName' },
                    { data: 'lastName' },
                    { data: 'phone' },
                    { data: 'email' },
                    {
                        data: 'address',
                        render: function (data, type, row) {
                            return data + " " + row["city"] + " " + row["state"] + ", " + row["postalCode"];
                        }
                    },
                    { data: 'countryName' },
                    {
                        data: 'id',
                        render: function (data) {
                            return `
                                    <a href="/Contact/Edit/${data}" class="btn btn-sm btn-warning">Edit</a>
                                    <a href="/Contact/Delete/${data}" class="btn btn-sm btn-danger">Delete</a>
                            `;
                        },
                        orderable: false,
                        searchable: false
                    }
                ],
                // initComplete: function () {
                //     // Apply the search
                //     this.api().columns().every(function () {
                //         var column = this;
                //         var header = $('.column-search th').eq(column.index());

                //         if (header.find('input').length) {
                //             header.find('input').on('keyup change clear', function () {
                //                 if (column.search() !== this.value) {
                //                     column.search(this.value).draw();
                //                 }
                //             });

                //             header.find('input').on('click', function (e) {
                //                 e.stopPropagation();
                //             });
                //         }
                //     });
                // }
                initComplete: function () {
                    var api = this.api();

                    // 1. Text input filters (for all columns with input)
                    api.columns().every(function () {
                        var column = this;
                        var header = $('.column-search th').eq(column.index());

                        var input = header.find('input');
                        if (input.length) {
                            input.on('keyup change clear', function () {
                                if (column.search() !== this.value) {
                                    column.search(this.value).draw();
                                }
                            });

                            input.on('click', function (e) {
                                e.stopPropagation();
                            });
                        }
                    });

                    // 2. Dropdown filter for Country (column index 6)
                    fetch('/DapperContact/GetContacts')
                        .then(res => res.json())
                        .then(data => {
                            const countryFilter = document.getElementById("countryFilter");
                            const existingValues = new Set();

                            // Prevent duplicates in case multiple rows have same country
                            data.data.forEach(row => {
                                if (!existingValues.has(row.countryName)) {
                                    existingValues.add(row.countryName);
                                    const option = document.createElement("option");
                                    option.value = row.countryName;
                                    option.textContent = row.countryName;
                                    countryFilter.appendChild(option);
                                }
                            });
                        });

                    $('#countryFilter').on('change', function () {
                        const selected = $(this).val();
                        api.column(6).search(selected).draw(); // column 6 is country
                    });
                }

            });
        });
    </script>
}