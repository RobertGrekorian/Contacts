@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<ContactsData.Models.Dto.ContactDto>

@{
    ViewData["Title"] = "Contacts";

    var sortOptions = new SelectList(new[]
    {
        new SelectListItem { Text = "First Name", Value = "FirstName" },
        new SelectListItem { Text = "Last Name", Value = "LastName" },
        new SelectListItem { Text = "Email", Value = "Email" },
        new SelectListItem { Text = "City", Value = "City" }
    }, "Value", "Text", ViewBag.CurrentSort);

    var sortDirOptions = new SelectList(new[]
    {
        new SelectListItem { Text = "Ascending", Value = "ASC" },
        new SelectListItem { Text = "Descending", Value = "DESC" }
    }, "Value", "Text", ViewBag.SortDirection);
}

<h2>Contacts</h2>

<form method="get" asp-controller="Contact" asp-action="Index" class="form-inline mb-3">
    <div class="form-group me-2">
        <input type="text" name="searchTerm" class="form-control" placeholder="Search..."
               value="@ViewBag.CurrentSearch" />
    </div>
    <div class="form-group me-2">
        <select name="sortColumn" asp-items="sortOptions" class="form-select"></select>
    </div>
    <div class="form-group me-2">
        <select name="sortDirection" asp-items="sortDirOptions" class="form-select"></select>
    </div>
    <button type="submit" class="btn btn-primary">Apply</button>
</form>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>City</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var contact in Model)
        {
            <tr>
                <td>@contact.FirstName</td>
                <td>@contact.LastName</td>
                <td>@contact.Email</td>
                <td>@contact.Phone</td>
                <td>@contact.City</td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new
        {
            page,
            searchTerm = ViewBag.CurrentSearch,
            sortColumn = ViewBag.CurrentSort,
            sortDirection = ViewBag.SortDirection
        }))
</div>
@* 
@model IEnumerable<Contact>

@{
    ViewData["Title"] = "Contact List";
}

<div class="container mt-5">
    <div class="card shadow p-4">
        <div class="row">
            <div class="col-6">
                <h2 class="mb-2">Contacts</h2>
            </div>
            <div class="col-6 mb-3 text-end">
                <a asp-action="Create" class="btn btn-success">
                    <i class="fas fa-plus m-2"></i> Create a new Contact
                </a>
            </div>
        </div>
        <div style="max-height: 400px; min-height: 400px; overflow-y: auto;">
            <table class="table table-striped table-bordered table-sm" style="table-layout: fixed; width: 100%;">
                <thead class="thead-light">
                    <tr>
                        <th style="width: 50px;">ID</th>
                        <th style="width: 100px;">First Name</th>
                        <th style="width: 100px;">Last Name</th>
                        <th style="width: 120px;">Phone</th>
                        <th style="width: 200px;">Email</th>
                        <th style="width: 250px;">Address</th>
                        <th style="width: 120px;">Country</th>
                        <th style="width: 80px;"></th>
                        <th style="width: 80px;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.FirstName</td>
                            <td>@item.LastName</td>
                            <td>@item.Phone</td>
                            <td class="text-truncate" style="overflow: hidden;">@item.Email</td>
                            <td class="text-truncate" style="overflow: hidden;">@item.Address @item.City @item.State , @item.PostalCode</td>
                            <td>@item.Country?.CountryName</td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">
                                    <i class="fas fa-pencil"></i> Edit
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </td>
                            <td>
                                <a asp-action="ShareWithViewBag" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                    <i class="fas fa-share"></i> Share
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<ul style="border: 1px solid red;" id="messagesList"><li>Recently Shared Contacts</li></ul>

@section Scripts {

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    connection.on("ReceiveMessage", function (message) {
        // Append message to your chat or UI
            const msgContainer = document.getElementById("messagesList");
        const msg = document.createElement("li");
        msg.textContent = message;
        msgContainer.appendChild(msg);
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>

} *@